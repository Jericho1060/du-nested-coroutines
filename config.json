{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"--[[\n    DU-Nested-Coroutines by Jericho\n    Permit to easier avoid CPU Load Errors by using nested coroutines and adapt cycles on the FPS\n    Source unminified available here: https://github.com/Jericho1060/du-nested-coroutines\n]]--\nlocal a={__index={coroutines={},functions={},main=coroutine.create(function()end),update=function(self)local b=coroutine.status(self.main)if b==\"dead\"then self.main=coroutine.create(function()self:run()end)elseif b==\"suspended\"then assert(coroutine.resume(self.main))end end,run=function(self)for c,d in pairs(self.coroutines)do local b=coroutine.status(d)if b==\"dead\"then self.coroutines[c]=coroutine.create(self.functions[c])elseif b==\"suspended\"then assert(coroutine.resume(d))end end end,init=function(self,e)for c,f in pairs(e)do self.functions[c]=f;self.coroutines[c]=coroutine.create(f)end end}}NestCo={}setmetatable(NestCo,a)\n\n--[[\n    add the functions you want to run as coroutines here\n    you can remove co1 and co2 that are given as example\n]]\nlocal functions = {}\nfunctions.co1 = function ()\n    for i=0, 10 do\n        system.print(\"coroutine 1 --- \"..i)\n        coroutine.yield(self.co1) -- pause the coroutine 1\n    end\nend\nfunctions.co2 = function ()\n    for i=0, 10 do\n        system.print(\"coroutine 2 --- \"..i)\n        coroutine.yield(self.co2) -- pause the coroutine 2\n    end\nend\n\n--[[\n    do not change the following\n]]\nNestCo:init(functions)","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"0"},{"code":"--[[\n    DU-Nested-Coroutines by Jericho\n    Permit to easier avoid CPU Load Errors\n    Source available here: https://github.com/Jericho1060/du-nested-coroutines\n]]--\n\nNestCo:update()","filter":{"args":[],"signature":"onUpdate()","slotKey":"-4"},"key":"1"}],"methods":[],"events":[]}
